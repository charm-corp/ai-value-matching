#!/usr/bin/env node

/**
 * Quick Server Test - ÏÑúÎ≤Ñ Ï†ïÏÉÅ ÏãúÏûë ÌôïÏù∏
 */

console.log('üöÄ Quick Server Test ÏãúÏûë...');
console.log('=' .repeat(50));

// ÌôòÍ≤Ω Î≥ÄÏàò ÏÑ§Ï†ï
process.env.NODE_ENV = 'test';
process.env.PORT = '3001';

try {
  // Express Ïï± Î°úÎî© ÌÖåÏä§Ìä∏
  console.log('1Ô∏è‚É£ Express Ïï± Î°úÎî© Ï§ë...');
  const express = require('express');
  const app = express();
  
  // Í∏∞Î≥∏ ÎØ∏Îì§Ïõ®Ïñ¥
  app.use(express.json());
  
  console.log('2Ô∏è‚É£ ÎùºÏö∞Ìä∏ ÌååÏùºÎì§ Î°úÎî© Ï§ë...');
  
  // Î™®Îì† ÎùºÏö∞Ìä∏ ÌååÏùº Î°úÎî© ÌÖåÏä§Ìä∏
  const authRoutes = require('./routes/auth');
  const userRoutes = require('./routes/users');
  const valuesRoutes = require('./routes/values');
  const matchingRoutes = require('./routes/matching');
  const advancedMatchingRoutes = require('./routes/advancedMatching');
  const privacyRoutes = require('./routes/privacy');
  const chatRoutes = require('./routes/chat');
  const profileRoutes = require('./routes/profile');
  const demoRoutes = require('./routes/demo');
  
  console.log('‚úÖ Î™®Îì† ÎùºÏö∞Ìä∏ ÌååÏùº Î°úÎî© ÏÑ±Í≥µ');
  
  console.log('3Ô∏è‚É£ RLS ÏãúÏä§ÌÖú Î°úÎî© Ï§ë...');
  
  const { createCompatibilityMiddleware } = require('./middleware/rlsIntegration');
  app.use(createCompatibilityMiddleware());
  
  console.log('‚úÖ RLS Ìò∏ÌôòÏÑ± ÎØ∏Îì§Ïõ®Ïñ¥ Ï∂îÍ∞Ä ÏôÑÎ£å');
  
  console.log('4Ô∏è‚É£ API ÎùºÏö∞Ìä∏ Îì±Î°ù Ï§ë...');
  
  // API ÎùºÏö∞Ìä∏ Îì±Î°ù
  app.use('/api', demoRoutes);
  app.use('/api/auth', authRoutes);
  app.use('/api/users', userRoutes);
  app.use('/api/values', valuesRoutes);
  app.use('/api/matching', matchingRoutes);
  app.use('/api/advanced-matching', advancedMatchingRoutes);
  app.use('/api/chat', chatRoutes);
  app.use('/api/profile', profileRoutes);
  app.use('/api/privacy', privacyRoutes);
  
  console.log('‚úÖ Î™®Îì† API ÎùºÏö∞Ìä∏ Îì±Î°ù ÏôÑÎ£å');
  
  // ÌÖåÏä§Ìä∏ ÎùºÏö∞Ìä∏
  app.get('/test', (req, res) => {
    res.json({
      success: true,
      message: 'Quick Server Test ÏÑ±Í≥µ!',
      timestamp: new Date().toISOString(),
      rlsEnabled: !!req.rlsContext
    });
  });
  
  console.log('5Ô∏è‚É£ ÏÑúÎ≤Ñ ÏãúÏûë Ï§ë...');
  
  // ÏÑúÎ≤Ñ ÏãúÏûë
  const server = app.listen(3001, () => {
    console.log('‚úÖ ÏÑúÎ≤ÑÍ∞Ä ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏãúÏûëÎêòÏóàÏäµÎãàÎã§!');
    console.log('üåê ÌÖåÏä§Ìä∏ URL: http://localhost:3001/test');
    
    // HTTP ÏöîÏ≤≠ ÌÖåÏä§Ìä∏
    const http = require('http');
    const options = {
      hostname: 'localhost',
      port: 3001,
      path: '/test',
      method: 'GET'
    };
    
    console.log('6Ô∏è‚É£ HTTP ÏöîÏ≤≠ ÌÖåÏä§Ìä∏ Ï§ë...');
    
    const req = http.request(options, (res) => {
      let data = '';
      res.on('data', (chunk) => {
        data += chunk;
      });
      res.on('end', () => {
        try {
          const response = JSON.parse(data);
          console.log('‚úÖ HTTP ÌÖåÏä§Ìä∏ ÏÑ±Í≥µ:', response.message);
          console.log('üìä ÏùëÎãµ Îç∞Ïù¥ÌÑ∞:', response);
          
          console.log('\\nüéâ Î™®Îì† ÌÖåÏä§Ìä∏ ÌÜµÍ≥º!');
          console.log('üìã ÌÖåÏä§Ìä∏ Í≤∞Í≥º ÏöîÏïΩ:');
          console.log('   ‚úÖ Express Ïï± Î°úÎî©');
          console.log('   ‚úÖ Î™®Îì† ÎùºÏö∞Ìä∏ ÌååÏùº Î°úÎî©');
          console.log('   ‚úÖ RLS ÏãúÏä§ÌÖú ÌÜµÌï©');
          console.log('   ‚úÖ API ÎùºÏö∞Ìä∏ Îì±Î°ù');
          console.log('   ‚úÖ ÏÑúÎ≤Ñ ÏãúÏûë');
          console.log('   ‚úÖ HTTP ÏöîÏ≤≠/ÏùëÎãµ');
          
          console.log('\\nüöÄ ÏÑúÎ≤Ñ Ï§ÄÎπÑ ÏôÑÎ£å! Ïù¥Ï†ú pnpm run devÎ°ú Ïã§Ìñâ Í∞ÄÎä•Ìï©ÎãàÎã§!');
          
          server.close();
          process.exit(0);
        } catch (error) {
          console.error('‚ùå HTTP ÏùëÎãµ ÌååÏã± Ïò§Î•ò:', error.message);
          server.close();
          process.exit(1);
        }
      });
    });
    
    req.on('error', (error) => {
      console.error('‚ùå HTTP ÏöîÏ≤≠ Ïò§Î•ò:', error.message);
      server.close();
      process.exit(1);
    });
    
    req.end();
  });
  
  server.on('error', (error) => {
    console.error('‚ùå ÏÑúÎ≤Ñ ÏãúÏûë Ïò§Î•ò:', error.message);
    process.exit(1);
  });
  
  // ÌÉÄÏûÑÏïÑÏõÉ ÏÑ§Ï†ï (30Ï¥à)
  setTimeout(() => {
    console.log('‚è∞ ÌÖåÏä§Ìä∏ ÌÉÄÏûÑÏïÑÏõÉ');
    server.close();
    process.exit(0);
  }, 30000);
  
} catch (error) {
  console.error('‚ùå Quick Server Test Ïã§Ìå®:', error.message);
  console.error('üìç Ïò§Î•ò ÏúÑÏπò:', error.stack.split('\\n')[1]);
  process.exit(1);
}

// ÏòàÏô∏ Ï≤òÎ¶¨
process.on('uncaughtException', (error) => {
  console.error('‚ùå ÏòàÏô∏ Î∞úÏÉù:', error.message);
  process.exit(1);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('‚ùå Promise Í±∞Î∂Ä:', reason);
  process.exit(1);
});